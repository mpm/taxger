require 'spec_helper'

module Taxger
  describe Einkommensteuer do
    it 'raises an error on unsupported years' do
      expect{ Einkommensteuer.calculate(2009, 0) }.to raise_exception(Einkommensteuer::Error)
    end

    # Reference values taken from https://www.bmf-steuerrechner.de/ekst/
    [
      [2010,   5_000_00,          0,        0],
      [2010,  10_000_00,     315_00,        0],
      [2010,  20_000_00,   2_701_00,   148_55],
      [2010,  50_000_00,  12_847_00,   706_58],
      [2010,  70_000_00,  21_228_00, 1_167_54],
      [2010, 260_000_00, 101_306_00, 5_571_83],

      [2011,   5_000_00,          0,        0],
      [2011,  10_000_00,     315_00,        0],
      [2011,  20_000_00,   2_701_00,   148_55],
      [2011,  50_000_00,  12_847_00,   706_58],
      [2011,  70_000_00,  21_228_00, 1_167_54],
      [2011, 260_000_00, 101_306_00, 5_571_83],

      [2012,   5_000_00,          0,        0],
      [2012,  10_000_00,     315_00,        0],
      [2012,  20_000_00,   2_701_00,   148_55],
      [2012,  50_000_00,  12_847_00,   706_58],
      [2012,  70_000_00,  21_228_00, 1_167_54],
      [2012, 260_000_00, 101_306_00, 5_571_83],

      [2013,   5_000_00,          0,        0],
      [2013,  10_000_00,     294_00,        0],
      [2013,  20_000_00,   2_677_00,   147_23],
      [2013,  50_000_00,  12_823_00,   705_26],
      [2013,  70_000_00,  21_204_00, 1_166_22],
      [2013, 260_000_00, 101_282_00, 5_570_51],

      [2014,   5_000_00,          0,        0],
      [2014,  10_000_00,     256_00,        0],
      [2014,  20_000_00,   2_634_00,   144_87],
      [2014,  50_000_00,  12_780_00,   702_90],
      [2014,  70_000_00,  21_161_00, 1_163_85],
      [2014, 260_000_00, 101_239_00, 5_568_14],

      [2015,   5_000_00,          0,        0],
      [2015,  10_000_00,     237_00,        0],
      [2015,  20_000_00,   2_611_00,   143_60],
      [2015,  50_000_00,  12_757_00,   701_63],
      [2015,  70_000_00,  21_138_00, 1_162_59],
      [2015, 260_000_00, 101_216_00, 5_566_88],

      [2016,   5_000_00,          0,        0],
      [2016,  10_000_00,     206_00,        0],
      [2016,  20_000_00,   2_560_00,   140_80],
      [2016,  50_000_00,  12_636_00,   694_98],
      [2016,  70_000_00,  21_005_00, 1_155_27],
      [2016, 260_000_00, 100_972_00, 5_553_46],

      [2017,   5_000_00,          0,        0],
      [2017,  10_000_00,     179_00,        0],
      [2017,  20_000_00,   2_520_00,   138_60],
      [2017,  50_000_00,  12_561_00,   690_85],
      [2017,  70_000_00,  20_924_00, 1_150_82],
      [2017, 260_000_00, 100_835_00, 5_545_92]
    ].each do |dataset|
      (year, brutto, ekst, solz) = dataset
      it "calculates Einkommensteuer for #{brutto / 100.0} EUR in #{year}" do
        tax = Einkommensteuer.calculate(year, brutto)
        expect(tax.ekst).to eq(ekst)
        expect(tax.solz).to eq(solz)
      end
    end
  end
end
